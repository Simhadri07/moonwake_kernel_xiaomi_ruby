name: Build MoonWake Ruby Kernel

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      WORKDIR: ${{ github.workspace }}
      OUTDIR: out
      ZIP_PREFIX: moonwake_ruby

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            bc bison build-essential flex zip curl \
            libncurses-dev libssl-dev ccache wget git unzip

      - name: Setup ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-Linux-${{ github.sha }}
          restore-keys: ccache-Linux-

      - name: Download clang (r530567)
        run: |
          mkdir -p "${WORKDIR}/clang"
          cd "${WORKDIR}/clang"
          wget -q https://github.com/Neutron-Toolchains/clang-builds/releases/download/530567/clang-r530567.tar.gz -O clang.tar.gz
          tar -xzf clang.tar.gz --strip-components=1
          echo "âœ… Using prebuilt clang in ${WORKDIR}/clang"

      - name: Build normal kernel
        run: |
          export PATH="${WORKDIR}/clang/bin:$PATH"
          mkdir -p $OUTDIR
          make O=$OUTDIR CC=clang ARCH=arm64 ruby_defconfig
          make -j$(nproc) O=$OUTDIR CC=clang ARCH=arm64

          # Pack into AnyKernel3
          git clone https://github.com/osm0sis/AnyKernel3.git -b master anykernel
          cp $OUTDIR/arch/arm64/boot/Image.gz-dtb anykernel/
          cd anykernel
          zip -r9 "../${ZIP_PREFIX}_normal.zip" *

      - name: Clone KernelSU
        run: |
          cd $WORKDIR
          git clone https://github.com/tiann/KernelSU.git --depth=1

      - name: Apply KernelSU patch
        run: |
          cd $WORKDIR/KernelSU
          ./patch.sh $WORKDIR

      - name: Build KSU kernel
        run: |
          export PATH="${WORKDIR}/clang/bin:$PATH"
          rm -rf $OUTDIR
          mkdir -p $OUTDIR
          make O=$OUTDIR CC=clang ARCH=arm64 ruby_defconfig
          make -j$(nproc) O=$OUTDIR CC=clang ARCH=arm64

          # Pack into AnyKernel3
          git clone https://github.com/osm0sis/AnyKernel3.git -b master anykernel-ksu
          cp $OUTDIR/arch/arm64/boot/Image.gz-dtb anykernel-ksu/
          cd anykernel-ksu
          zip -r9 "../${ZIP_PREFIX}_ksu.zip" *

      - name: Upload kernel zips
        uses: actions/upload-artifact@v4
        with:
          name: KernelZips
          path: |
            ${{ github.workspace }}/*.zip
